{"version":3,"sources":["logo.svg","components/header.js","components/NoWeb3.js","components/Bodytext.js","components/DocForm.js","components/ExistingDocTable.js","components/Web3Gateway.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FancyBorder","props","react_default","a","createElement","className","src","NoDappBrowser","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openBrowserStore","bind","assertThisInitialized","e","isMobile","isIOS","window","open","isAndroid","browserName","browserText","includes","align","dist","onClick","React","Component","BodyText","networkNameTable","1","3","4","42","DocForm","state","docTitle","author","content","handleSubmit","nextProps","forceUpdate","preventDefault","buttonSet","console","log","Web3State","networkVersion","primereact_button","label","userContractAddress","type","verifyDoc","id","addDoc","actionState","createDocStorageContract","attemptLogin","onSubmit","inputtext","placeholder","value","onChange","handleFormChange","title","inputtextarea","rows","cols","autoResize","ExistingDocTable","dynamicColumns","field","header","map","col","i","column","key","docEvents","datatable","sha256","require","adminAbi","JSON","parse","AdminContractData","abi","docStoreAbi","DocContractData","nullAddress","networkLookupTable","undefined","Web3Gateway","acct","adminContract","docEventEmitter","docContract","name","tick","handleMetaMaskChanges","iniateDocumentAccess","storeEvent","showSuccess","showError","message","messages","show","severity","summary","detail","target","setState","docHash","web3","utils","isAddress","eth","Contract","docStore","methods","verifyDocHash","from","isInDoc","addNewDoc","send","gas","transactionReceipt","_context2","t0","storeNewUserContractAddress","_context3","selectedAddress","checkIfUserHasStorageContract","initContracts","initEventListeners","_context5","currentProvider","publicConfigStore","on","t1","eventFilters","fromBlock","address","events","StoreDoc","t2","error","eventResult","_ref","returnValues","eventObject","_author","_docName","_docHash","push","loginSuccess","ethereum","enable","Web3","_context7","getAccounts","accts","net","getId","length","toString","timerID","setInterval","_this2","clearInterval","removeAllListeners","setTimeout","_context9","DocSubmitStatus","text","_this3","NoWeb3","progressbar","mode","Bodytext","components_DocForm","ref","el","components_ExistingDocTable","App","components_Web3Gateway","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.669f027c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n\nfunction FancyBorder(props) {\n    return(\n        <header className='Topbar'>\n            <div className='Topbar-div'>\n                <img className='Topbbar-logo' src={'https://i.imgur.com/415UF98.png'} />\n                <text className='Topbar-text'>BlockUSign</text>\n            </div>\n        </header>\n    )\n}\n\nexport default FancyBorder;","import React from \"react\";\nimport {browserName, isMobile, isAndroid, isIOS, BrowserView, MobileView} from \"react-device-detect\";\n\nclass NoDappBrowser extends React.Component {\n\n\n\n    constructor(props) {\n        super(props);\n        this.openBrowserStore = this.openBrowserStore.bind(this);\n    }\n\n    openBrowserStore(e){\n        if (isMobile) {\n            if (isIOS) window.open('https://itunes.apple.com/us/app/trust-ethereum-wallet/id1288339409?mt=8');\n            if (isAndroid) window.open('https://play.google.com/store/apps/details?id=com.wallet.crypto.trustapp');\n        }\n        else {\n            switch (browserName) {\n                case \"Opera\":\n                    window.open('https://addons.opera.com/en/extensions/details/metamask/', '_blank');\n                    break;\n                case \"Chrome\":\n                    window.open('https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn', '_blank');\n                    break;\n                case \"Firefox\":\n                    window.open('https://addons.mozilla.org/en-US/firefox/addon/ether-metamask/', '_blank');\n                    break;\n                default:\n                    window.open('https://metamask.io','_blank');\n            }\n        }\n    }\n\n    render() {\n        let browserText;\n        if (isMobile === false && [\"Chrome\", \"Firefox\", \"Brave\", \"Opera\"].includes(browserName)){\n            browserText = \"Looks like you don't have an ethereum browser extension installed, consider installing Metamask!\"\n        }\n        else{\n            browserText = \"Your browser does not work with the decentralized web, consider using Chrome, Firefox, Opera, or Brave!\"\n        }\n        return (\n            <div className='Bodytext-top-div'>\n                <div align=\"center\"><h1 className='Body-h1'>Decentralized proof of authorship</h1></div>\n                <div>\n                    <h2 className='Body-h2'>Not connected to the ethereum network</h2>\n                    <BrowserView>\n                        <div>\n                            <text className='Body-text'>{browserText}\n                            </text>\n                        </div>\n                        <img src=\"https://i.imgur.com/uURD8CB.png\" onClick={this.openBrowserStore}/>\n                    </BrowserView>\n                    <MobileView>\n                        <div>\n                            <text className='Body-text'>Looks like you don't have an ethereum capable browser, consider\n                                installing trust browser!\n                            </text>\n                        </div>\n                        <img src=\"https://i.imgur.com/jAWcguw.png\" onClick={this.openBrowserStore}/>\n                    </MobileView>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NoDappBrowser;","import React from \"react\";\n\nfunction BodyText(props) {\n    return(\n        <div className='Bodytext-top-div'>\n            <div align=\"center\"><h1 className='Body-h1'>Decentralized proof of authorship</h1></div>\n            <div className='Bodytext-body-div'>\n                <div>\n                    <h2 className='Body-h2'>Ready to secure your work?</h2>\n                    <text className='Body-text'>Just put your document and name below, press submit,\n                        and the proof of your authorship will be forever stored in the ethereum blockchain!\n                    </text>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default BodyText;","import React from \"react\";\nimport {InputText} from \"primereact/inputtext\";\nimport {InputTextarea} from 'primereact/inputtextarea';\nimport {Button} from 'primereact/button';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nconst nullAddress = \"0x0000000000000000000000000000000000000000\";\nconst networkNameTable = {'1':'mainnet', '3':'roposten', '4':'rinkeby','42':'kovan'};\n\n\n\nclass DocForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {docTitle:'', author:'', content:''};\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.forceUpdate();\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n    }\n\n    render(){\n        let buttonSet;\n        let docList;\n        console.log(this.props.Web3State);\n        if (this.props.Web3State === \"Authorized\") {\n            if (this.props.networkVersion === \"1\"){\n                buttonSet = <Button label=\"Ethereum Mainnet not yet supported, please choose another network!\" className=\"p-button-warning\"/>\n            }\n            else if (this.props.networkVersion !== \"1 \"&& this.props.networkVersion in networkNameTable) {\n                if (this.props.userContractAddress !== nullAddress){\n                    buttonSet = (\n                        <div>\n                            <Button type=\"submit\" label=\"Verify Document\" className=\"p-button-raised\" onClick={this.props.verifyDoc}  id=\"verify\"/>\n                            <Button type=\"submit\" label=\"Add New Document\" className=\"p-button-raised\" onClick={this.props.addDoc} id=\"add\"/>\n                        </div>\n                    );\n                }\n                else{\n                    if (this.props.actionState === \"contractDeployFailed\"){\n                        buttonSet = <Button label=\"Contract Deployment Failed\"  className=\"p-button-danger\"/>\n                    }\n                    else if (this.props.actionState === \"attemptContractDeploy\" || this.props.actionState === \"AwaitingContractDeploy\"){\n                        buttonSet = <Button label=\"Attemping To Create Your Account..\"  className=\"p-button-raised\"/>\n                    }\n                    else {\n                        buttonSet = <Button label=\"Create Your Document Storage Account on the Ethereum Blockchain!\"\n                                            onClick={this.props.createDocStorageContract} className=\"p-button-raised\"/>\n                    }\n                }\n            }\n            else {\n                console.log(this.props.networkVersion);\n                buttonSet = <Button label=\"Chosen Ethereum Network not recognized, please choose rinkeby, kovan, ropsten, or mainnet\" className=\"p-button-warning\"/>\n            }\n        }\n        else if (this.props.Web3State === \"LoggedOut\"){\n            buttonSet = <Button label=\"You've been logged out of metamask, please log back in before proceeding\" className=\"p-button-warning\"/>\n        }\n        else{\n            buttonSet = <Button label=\"Please Login to a Dapp Browser and Authorize This Application Before Proceeding\" className=\"p-button-warning\" onClick={this.props.attemptLogin}/>\n        }\n\n        return(\n            <form className=\"Doc-container\" onSubmit={this.handleSubmit}>\n                <div className=\"p-col-12 p-md-4\">\n                    <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\">\n                                    <i className=\"pi pi-user\"/>\n                                </span>\n                        <InputText id=\"author\" placeholder=\"Author Name\" value={this.props.author} onChange={this.props.handleFormChange} />\n                    </div>\n                </div>\n\n                <div className=\"p-col-12 p-md-4\">\n                    <div className=\"p-inputgroup\">\n                        <span className=\"p-inputgroup-addon\">\n                            <i className=\"pi pi-file\"/>\n                        </span>\n                        <InputText id=\"title\" placeholder=\"Document Title\" value={this.props.title} onChange={this.props.handleFormChange} />\n                    </div>\n                </div>\n\n                <div className=\"p-inputgroup\">\n                    <InputTextarea id =\"content\" rows={5} cols={30} value={this.props.content} onChange={this.props.handleFormChange} autoResize={true} />\n                </div>\n                {buttonSet}\n            </form>\n        );\n    }\n\n}\n\nexport default DocForm;","import React from \"react\";\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\n\n\nclass ExistingDocTable extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        let cols = [\n            {field: '_author', header: 'Author'},\n            {field: '_docName', header: 'Doc Name'},\n            {field: '_docHash', header: 'Doc Hash'},\n        ];\n\n        let dynamicColumns = cols.map((col,i) => {\n            return <Column key={col.field} field={col.field} header={col.header} />;\n        });\n        console.log(this.props.docEvents);\n        return (\n            <DataTable value={this.props.docEvents}>\n                {dynamicColumns}\n            </DataTable>\n        );\n    }\n}\n\nexport default ExistingDocTable;","import AdminContractData from '../abis/DocStoreAdmin';\nimport DocContractData from '../abis/DocStore';\nimport NoDappBrowser from \"./NoWeb3\";\nimport BodyText from \"./Bodytext\";\nimport DocForm from \"./DocForm\";\nimport ExistingDocTable from \"./ExistingDocTable\";\nimport {ProgressBar} from 'primereact/progressbar';\nimport {Messages} from 'primereact/messages';\nimport {Message} from 'primereact/message';\nimport React from \"react\";\nimport Web3 from \"web3\";\nconst sha256 = require('sha256');\nconst adminAbi = JSON.parse(AdminContractData.abi);\nconst docStoreAbi = JSON.parse(DocContractData.abi);\nconst rinkebyAdminAddress = '0x4469dd74B6b7A128656ACAA12eA50aA28DdFC7Ca';\nconst kovanAdminAddress = '0x558c704f255Da2cAf479133c122236bEb2942641';\nconst ropstenAdminAddress = '0x379aD71d2FbD3C095Cb4b3bdf95Bfd3fF12d76F8';\nconst nullAddress = \"0x0000000000000000000000000000000000000000\";\nconst networkLookupTable = {'1':undefined, '3':ropstenAdminAddress, '4':rinkebyAdminAddress,'42':kovanAdminAddress};\n\nclass Web3Gateway extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {acct:undefined, Web3State:\"Unauthorized\", adminContract: undefined,\n            networkVersion:undefined, userContractAddress:nullAddress, actionState:undefined,\n            docEventEmitter:undefined, docEvents:[], docContract:undefined, name:'', author:'', content:''};\n        this.tick = this.tick.bind(this);\n        this.handleMetaMaskChanges = this.handleMetaMaskChanges.bind(this);\n        this.createDocStorageContract = this.createDocStorageContract.bind(this);\n        this.iniateDocumentAccess = this.iniateDocumentAccess.bind(this);\n        this.storeEvent = this.storeEvent.bind(this);\n        this.handleFormChange = this.handleFormChange.bind(this);\n        this.verifyDoc = this.verifyDoc.bind(this);\n        this.addDoc = this.addDoc.bind(this);\n        this.showSuccess = this.showSuccess.bind(this);\n        this.showError = this.showError.bind(this);\n        this.attemptLogin = this.attemptLogin.bind(this);\n    }\n\n    showSuccess(message) {\n        this.messages.show({severity: 'success', summary: 'Success Message', detail: message});\n    }\n\n    showError(message) {\n        this.messages.show({severity: 'error', summary: 'Error Message', detail: message});\n    }\n\n    handleFormChange(e){\n        console.log(e.target);\n        switch (e.target.id){\n            case \"author\":\n                this.setState({author: e.target.value});\n                break;\n            case \"title\":\n                this.setState({title: e.target.value});\n                break;\n            case \"content\":\n                this.setState({content: e.target.value});\n                break;\n        }\n    }\n\n    async verifyDoc(e){\n        let userContractAddress = this.state.userContractAddress;\n        let docHash = '0x' + sha256(this.state.content + this.state.title + this.state.author);\n        if (window.web3.utils.isAddress(userContractAddress) && userContractAddress !== nullAddress){\n            let docStore = await new window.web3.eth.Contract(docStoreAbi, userContractAddress);\n            let isInDoc = await docStore.methods.verifyDocHash(docHash).call({from: this.state.acct});\n            console.log(isInDoc);\n            if (isInDoc === true)\n                this.showSuccess(\"Document already stored in the blockchain!\");\n            else\n                this.showError(\"Document hasn't yet been stored in the blockchain!\");\n        }\n    }\n\n    async addDoc(e){\n        let userContractAddress = this.state.userContractAddress;\n        let docHash = '0x' + sha256(this.state.content + this.state.title + this.state.author);\n        if (window.web3.utils.isAddress(userContractAddress) && userContractAddress !== nullAddress){\n            let docStore = await new window.web3.eth.Contract(docStoreAbi, userContractAddress);\n            let isInDoc = await docStore.methods.verifyDocHash(docHash).call({from: this.state.acct});\n            console.log(isInDoc);\n            if (isInDoc === true){\n                this.showError(\"Document already in the blockchain!\");\n            } else {\n                try {\n                    this.setState({actionState:\"AttemptDocSubmit\"});\n                    let transactionReceipt = await docStore.methods.addNewDoc(docHash, this.state.title, this.state.author).send({\n                        from: this.state.acct,\n                        gas: 1000000\n                    });\n                    this.setState({actionState:undefined});\n                    this.showSuccess(\"Document stored successfully in the blockchain!\\n \" +\n                        \"Records will updated in the next block\");\n                    console.log(transactionReceipt)\n                } catch (e){\n                    this.setState({actionState:\"DocSubmitFailed\"});\n                    this.showError(\"Submission to the blockchain failed!\");\n                    console.log(e);\n                }\n\n            }\n\n        }\n    }\n    async createDocStorageContract(e){\n        let userContractAddress;\n        e.preventDefault();\n        console.log(\"Firing Contract Deploy\");\n        this.setState({actionState:\"attemptContractDeploy\"});\n        try {\n            await this.state.adminContract.methods.storeNewUserContractAddress().send({\n                from: this.state.acct,\n                gas: 1000000\n            });\n            this.setState({actionState:\"AwaitingContractDeploy\"})\n        }\n        catch (e) {\n            console.log(e);\n            this.setState({actionState:undefined});\n            this.showError(\"Account Creation on the Ethereum Blockchain Failed\")\n        }\n        console.log(userContractAddress);\n    }\n\n    async handleMetaMaskChanges(e) {\n        if (e.networkVersion !== this.state.networkVersion) {\n            if (e.networkVersion in networkLookupTable) {\n                let adminContract = await new window.web3.eth.Contract(adminAbi, networkLookupTable[e.networkVersion]);\n                this.setState({networkVersion:e.networkVersion, adminContract:adminContract});\n            }\n        }\n        if (e.selectedAddress !== this.state.acct) {\n            let userContractAddress;\n            if (typeof this.state.adminContract === 'object'){\n                userContractAddress = await this.state.adminContract.methods.checkIfUserHasStorageContract().call();\n            } else {\n                userContractAddress = nullAddress\n            }\n            if (userContractAddress !== nullAddress) {\n                this.setState({acct:e.selectedAddress, userContractAddress:userContractAddress});\n            }\n        }\n    }\n\n    async iniateDocumentAccess(initContracts = true, initEventListeners = true){\n        if (initContracts === true) {\n            console.log(\"Attempting to deploy contracts\");\n            try {\n                let docContract;\n                let adminContract = await new window.web3.eth.Contract(adminAbi, networkLookupTable[this.state.networkVersion]);\n                let userContractAddress = await adminContract.methods.checkIfUserHasStorageContract().call({from: this.state.acct});\n                if (userContractAddress !== nullAddress && window.web3.utils.isAddress(userContractAddress)) {\n                    try {\n                        docContract = await new window.web3.eth.Contract(docStoreAbi, userContractAddress);\n                    } catch (e) {\n                        console.log(e);\n                    }\n\n                }\n                this.setState({\n                    adminContract: adminContract,\n                    userContractAddress: userContractAddress,\n                    docContract: docContract\n                });\n                window.web3.currentProvider.publicConfigStore.on('update', this.handleMetaMaskChanges);\n            console.log(this.state.userContractAddress);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n\n        if (initEventListeners === true) {\n            try {\n                if (this.state.userContractAddress !== nullAddress && window.web3.utils.isAddress(this.state.userContractAddress) &&\n                    typeof this.state.docContract === \"object\") {\n                    let eventFilters = {fromBlock: 0, address: this.state.userContractAddress};\n                    console.log(\"Attempt Event Emitter Instantiation\");\n                    let StoreDoc = await this.state.docContract.events.StoreDoc({}, eventFilters, this.storeEvent);\n                    this.setState({docEventEmitter: StoreDoc});\n                    console.log(this.state.docEvents);\n                }\n            }\n            catch (e) {\n                console.log(e);\n            }\n        }\n    }\n\n    async storeEvent(error, eventResult){\n        if (error)\n            console.log('Error in myEvent event handler: ' + error);\n        else {\n            console.log(\"New Blockchain Event Being Recorded\");\n            let eventObject = (({ _author, _docName, _docHash }) => ({ _author, _docName, _docHash }))(eventResult.returnValues);\n            let events = this.state.docEvents;\n            events.push(eventObject);\n            this.setState({docEvents:events});\n            console.log(this.state.docEvents);\n        }\n    }\n\n    async attemptLogin(){\n        let loginSuccess = false;\n        // Non Legacy Browsers\n        if (window.ethereum) {\n            let ethereum = window.ethereum;\n            try {\n                await ethereum.enable();\n                window.web3 = new Web3(ethereum);\n                loginSuccess = true;\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        // Legacy dapp browsers...\n        else if (window.web3) {\n            try {\n                window.web3 = new Web3(window.web3.currentProvider);\n                loginSuccess = true;\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        // Non-dapp browsers...\n        else {\n            console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n        }\n\n        //Determine if app was authorized\n        if (loginSuccess === true) {\n            try {\n                let accts = await window.web3.eth.getAccounts();\n                let acct = accts[0];\n                let networkVersion = await window.web3.eth.net.getId();\n                if (typeof accts !== \"undefined\" && accts.length > 0) {\n                    this.setState({Web3State: \"Authorized\", acct: acct, networkVersion: networkVersion.toString()});\n                    window.web3.currentProvider.publicConfigStore.on('update', this.handleMetaMaskChanges);\n                }\n            }\n            catch (e) {\n                console.log(e);\n            }\n        }\n        //Set State Watching Process in Motion\n        if (window.web3 || window.ethereum){ this.timerID = setInterval(() => this.tick(), 2000);}\n        //Determine if user has their own document contract and update state\n        if (this.state.Web3State === \"Authorized\"){ await this.iniateDocumentAccess(); }\n    }\n\n    async componentDidMount() {\n        await this.attemptLogin();\n    }\n\n    componentWillUnmount() {\n        if (this.timerID !== \"undefined\"){\n            clearInterval(this.timerID);\n        }\n\n        if (typeof this.state.docEventEmitter === \"object\"){\n            try{\n                this.state.docEventEmitter.removeAllListeners();\n            } catch (e){\n                console.log(e);\n            }\n        }\n    }\n\n    ///Tick function checks up on changes in environment and updates state to reflect that.\\\n    async tick(){\n        let accts = await window.web3.eth.getAccounts();\n        if ((typeof accts === 'undefined' || accts.length === 0) && this.state.Web3State === \"Authorized\") {\n            this.setState({Web3State:\"UnAuthorized\", acct:undefined})\n            this.setState({docEvents:[]})\n        }\n        if ((typeof accts === 'object') && (accts.length > 0) && this.state.Web3State !== \"Authorized\") {\n            this.setState({Web3State:\"Authorized\", acct:undefined})\n        }\n        if (this.state.actionState === \"contractDeployFailed\" || this.state.actionState === \"DocSubmitFailed\"){\n            setTimeout(this.setState({actionState:undefined}), 2000);\n        }\n        if (window.ethereum && this.state.Web3State === \"Unauthorized\"){\n            try {\n                let accts = await window.web3.eth.getAccounts();\n                if (typeof accts !== \"undefined\" && accts.length > 0){\n                    console.log(accts)\n                    this.setState({Web3State:\"Authorized\", acct:accts[0]});\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (this.state.actionState===\"AwaitingContractDeploy\"){\n            try {\n                let userContractAddress = await this.state.adminContract.methods.checkIfUserHasStorageContract().call({from: this.state.acct});\n                if (userContractAddress !== nullAddress) {\n                    this.setState({userContractAddress: userContractAddress, actionState: undefined});\n                    this.showSuccess(\"Document Storage Account Created on the Ethereum Blockchain\")\n                }\n            } catch (e) {\n                console.log(e);\n            }\n\n        }\n\n        if (window.web3.utils && window.web3.utils.isAddress(this.state.userContractAddress)\n            && this.state.userContractAddress !== nullAddress\n            && typeof this.state.docEventEmitter !== \"object\") {\n                this.iniateDocumentAccess(false, true);\n            }\n    }\n\n    render(){\n\n        let DocSubmitStatus;\n        if (typeof window.web3 === \"undefined\") {\n            console.log(window.web3);\n            return(\n                <div className=\"main-div\">\n                    <NoDappBrowser/>\n                </div>);\n        }\n        else {\n            if (this.state.actionState === \"AttemptDocSubmit\" || this.state.actionState === \"attemptContractDeploy\"){\n                let text;\n                if (this.state.actionState === \"AttemptDocSubmit\") { text = \"Submitting Your Doc to the Ethereum Blockchain!\"}\n                if (this.state.actionState === \"attemptContractDeploy\" || this.state.actionState === \"AwaitingContractDeploy\") {\n                    text = \"Attempting to Create Your Document Storage Account!\"\n                }\n                DocSubmitStatus = (\n                  <div className=\"Bodytext-style-eth-div\">\n                      <text>{text}</text>\n                      <div>\n`                      <ProgressBar mode=\"indeterminate\" />\n                      </div>\n                  </div>\n                );\n            }\n            return(\n                <div className=\"main-div\">\n\n                    <BodyText/>\n                    <DocForm acct={this.state.acct} Web3State={this.state.Web3State} networkVersion={this.state.networkVersion}\n                    userContractAddress = {this.state.userContractAddress} actionState={this.state.actionState}\n                             createDocStorageContract={this.createDocStorageContract} author={this.state.author}\n                             title={this.state.title} content={this.state.content} handleFormChange={this.handleFormChange}\n                             addDoc = {this.addDoc} verifyDoc={this.verifyDoc} attemptLogin = {this.attemptLogin} />\n                    <Messages ref={(el) => this.messages = el} />\n                    {DocSubmitStatus}\n                    <h2>Your Existing Documents</h2>\n                    <ExistingDocTable docEvents={this.state.docEvents}/>\n                </div>\n            );\n        }\n    }\n}\n\n\nexport default Web3Gateway;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport FancyBorder from './components/header';\nimport Web3Gateway from './components/Web3Gateway';\nimport './App.css';\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <FancyBorder/>\n          <div className=\"main-div\">\n              <Web3Gateway/>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import Toggle from './components/Control';\nimport * as serviceWorker from './serviceWorker';\n//import {BasicForm, EssayForm} from \"./components/Forms\";\n\n//import web3 from './web3';\n\nReactDOM.render(\n    <App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}